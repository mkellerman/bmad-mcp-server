[project]
name = "bmad-mcp-server"
version = "0.1.0"
description = "Model Context Protocol server for BMAD methodology"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.19.0",
]

[project.scripts]
bmad-mcp-server = "src.mcp_server:run"

[project.optional-dependencies]
# All test & development dependencies (unified)
# Equivalent to: pip install -r tests/requirements.txt
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "litellm>=1.78.0",
    "jsonschema>=4.20.0",
    "faker>=22.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "rich>=13.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src", "bmad"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "copilot_mcp.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "manual: Manual/interactive tests with verbose output (deselect with '-m \"not manual\"')",
    "integration: Integration tests (may be slower, test component interactions)",
    "e2e: End-to-end tests (requires litellm, tests full workflows with Copilot)",
]
# Exclude manual tests and archived tests by default
addopts = "-m 'not manual' --ignore=tests/archived_legacy_tests"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
